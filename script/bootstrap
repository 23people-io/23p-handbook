#!/bin/bash

# script/bootstrap: Resolve all dependencies that the application requires to run.

set -e

cd "$(dirname "$0")/.."

# ANSI color codes
MAGENT=$(tput -Txterm setaf 5)
GREEN=$(tput -Txterm setaf 2)
YELLOW=$(tput -Txterm setaf 3)
WHITE=$(tput -Txterm setaf 7)
RED=$(tput -Txterm setaf 1)
BLUE=$(tput -Txterm setaf 6)
RESET=$(tput -Txterm sgr0)

## Check system
echo "${YELLOW}Checking system...${RESET}"
if [ "$(uname)" = "Darwin" ]; then
    echo "${WHITE}macOS detected.${RESET}"
elif [ "$(uname)" = "Linux" ]; then
    if [ -f "/etc/manjaro-release" ]; then
        echo "${WHITE}Manjaro Linux detected.${RESET}"
    else
        echo "${WHITE}Linux detected.${RESET}"
    fi
elif uname -r | grep -i microsoft > /dev/null; then
    echo "${WHITE}Windows Subsystem for Linux detected.${RESET}"
else
    echo "${WHITE}Unsupported system detected. Please use macOS, Linux, or Windows Subsystem for Linux (WSL).${RESET}"
    exit 1
fi

## Check Python
echo "${YELLOW}Checking Python installation...${RESET}"
if pyenv versions --bare | grep -q "^${PYTHON_VERSION}$"; then
    echo "${GREEN}✔ Python ${PYTHON_VERSION} is already installed with pyenv.${RESET}"
else
    echo "${RED}Python ${PYTHON_VERSION} is not installed. Please install Python ${PYTHON_VERSION} to continue.${RESET}"
    echo "${WHITE}You can install Python by running the following command:${RESET} make install-python-version"
    exit 1
fi

## Check Docker
echo "${YELLOW}Checking Docker installation...${RESET}"
if command -v docker > /dev/null; then
    echo "${GREEN}✔ $(docker --version) is already installed.${RESET}"
else
    echo "${RED}Docker is not installed. Please install Docker to continue.${RESET}"
    exit 1
fi

## Check Poetry
echo "${YELLOW}Checking Poetry installation...${RESET}"
if command -v poetry > /dev/null; then
    POETRY_VERSION=$(poetry --version 2>&1 | sed -E 's/Poetry \(version ([0-9]+\.[0-9]+\.[0-9]+)\)/\1/')
    IFS='.' read -r -a POETRY_VERSION_ARRAY <<< "$POETRY_VERSION"
    if [ ${POETRY_VERSION_ARRAY[0]} -ge 1 ] && [ ${POETRY_VERSION_ARRAY[1]} -ge 8 ]; then
        echo "${WHITE}$(poetry --version) is already installed.${RESET}"
    else
        echo "${RED}Poetry 1.8 or later is required. You can install poetry by running the following command, then adding Poetry to your PATH:${RESET}"
        echo "${RED} curl -sSL https://install.python-poetry.org | python${PYTHON_VERSION} -${RESET}"
        echo "${RED}More detail here: https://python-poetry.org/docs/#installing-with-the-official-installer${RESET}"
        exit 1
    fi
else
    echo "${RED}Poetry is not installed. You can install poetry by running the following command, then adding Poetry to your PATH:${RESET}"
    echo "${RED} curl -sSL https://install.python-poetry.org | python${PYTHON_VERSION} -${RESET}"
    echo "${RED}More detail here: https://python-poetry.org/docs/#installing-with-the-official-installer${RESET}"
    exit 1
fi

# Clean the project
echo "${YELLOW}Cleaning...${RESET}"
echo "${WHITE}Deleting .venv directory.${RESET}"
rm -rf .venv
echo "${WHITE}Deleting poetry.lock file.${RESET}"
rm -f poetry.lock
echo "${GREEN}✔ Cleaned successfully.${RESET}"

# Install Python dependencies
echo "${YELLOW}Installing Python dependencies...${RESET}"
if [ -z "${TZ}" ]; then
    echo "${WHITE}Defaulting TZ (timezone) to UTC${RESET}"
    export TZ="UTC"
fi
echo "${WHITE}Deleting .venv directory.${RESET}"
rm -rf .venv
echo "${WHITE}Installing dependencies...${RESET}"
echo "${BLUE}Using $(python --version)${RESET}"
poetry env use python
poetry install
echo "${GREEN}✔ Python dependencies installed successfully.${RESET}"

poetry export --without-hashes -f requirements.txt -o requirements.txt


